<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta content="text/html;charset=UTF-8" http-equiv="content-type" />
    <title>FMU Master</title>
    <link href="stylesheets/style.css" rel="stylesheet" type="text/css" />
    <link href="bootstrap/css/bootstrap.css" rel="stylesheet">
    <link href="bootstrap/css/bootstrap-responsive.css" rel="stylesheet">
  </head>
  <body>
    <div class="container">
        <div class="modal hide fade" id="simulateModal">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3>Simulate</h3>
            </div>
            <div class="modal-body">
                <div id="no-fmus-in-simulation-message" style="display:none">
                    <p>You have no FMUs in your simulation...</p>
                </div>
                <div id="simulation-parameters">
                    <p>Please enter simulation parameters, then press <i>Simulate</i>.</p>

                    <label for="timestep">Time step size</label>
                    <input type="number" id="timestep" value="0.01"/>

                    <label for="endTime">Simulation end time</label>
                    <input type="number" id="endTime" value="1.0"/>
                </div>
            </div>
            <div class="modal-footer">
                <a href="#" class="btn" data-dismiss="modal">Cancel</a>
                <a href="#" id="simulate-button" class="btn btn-primary">Simulate</a>
            </div>
        </div>
        <div class="navbar">
            <div class="navbar-inner">
                <div class="container" style="width: auto;">
                    <a class="brand" href="#">FMU Master</a>
                    <ul class="nav" role="navigation">
                        <li class="active"><a href="#" id="nav-simulation">Simulation</a></li>
                        <li class="dropdown">
                            <a id="drop1" href="#" role="button" class="dropdown-toggle" data-toggle="dropdown">Import FMU <b class="caret"></b></a>
                            <ul class="dropdown-menu" role="menu" aria-labelledby="drop1" id="fmu-dropdown"><%
                            for(var i=0; i<fmus.length; i++){ %>
                                <li role="presentation"><a role="menuitem" tabindex="-1" href="#" data-file="<%=fmus[i]%>" data-identifyer="<%=fmus[i].replace(".fmu","")%>"><%=fmus[i]%></a></li><%
                            }
                            %></ul>
                        </li>
                        <!--
                        <li class="dropdown">
                            <a href="#" id="drop2" role="button" class="dropdown-toggle" data-toggle="dropdown">Options <b class="caret"></b></a>
                            <ul class="dropdown-menu" role="menu" aria-labelledby="drop2">
                                <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Dummy option</a></li>
                            </ul>
                        </li>
                        <li class="divider-vertical"></li>
                        -->
                        <li><a data-toggle="modal" id="nav-simulate" href="#simulateModal">Simulate...</a></li>
                        <li class="divider-vertical"></li>
                        <li><a href="#" id="nav-analysis">Analysis</a></li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row" id="simulation-view">
            <div id="diagram" class="span6">
                <h3>FMU Master</h3>
                <p>Welcome to the FMU co-simulation master. Use this app to simulate models from various simulation tools.</p>
                <p>First, choose <i>Import FMU</i> to load a model. Select it in the list below to edit its parameters. Then press <i>Simulate</i>.</p>
                <table id="fmu-table" class="table table-hover">
                    <thead>
                        <th>Imported FMUs:</th>
                    </thead>
                </table>
            </div>
            <div id="selection-menu" class="span6" data-editing="">
                <h3 class="head">Selection menu</h3>
                <p id="variables-loading-message" style="display:none">Loading variables...</p>
                <table id="init-vals" style="display:none" class="table table-hover">
                    <tr>
                        <th colspan="2">Initial state</th>
                        <th>Description</th>
                    </tr>
                    <!--
                    <tr>
                        <td>state_name</td>
                        <td><input type="number"></td>
                        <td>Description...</td>
                    </tr>
                    -->
                </table>
                <table id="parameters" style="display:none" class="table table-hover">
                    <tr>
                        <th colspan="2">Parameter</th>
                        <th>Description</th>
                    </tr>
                    <!--
                    <tr>
                        <td>param_name</td>
                        <td><input type="number"></td>
                    </tr>
                    -->
                </table>
            </div>
        </div>

        <div class="row" id="analysis-view" style="display:none">
            <div id="analysis" class="span8">
              <h3>Analysis</h3>
              <div id="plot"></div>
            </div>
            <div id="plot-menu" class="span4">
                <table id="plot-columns" class="table table-hover">
                    <tr>
                        <th>Plot columns</th>
                        <th><input type="checkbox" id="plot-columns-showall" checked="checked"></th>
                    </tr>
                </table>
            </div>
        </div>

        <footer class="footer">
          <div class="container">
            <p>UMIT Research Lab 2013</p>
          </div>
        </footer>
    </div>

    <script src="javascripts/lib/raphael.js"></script>
    <script src="javascripts/lib/jquery.js"></script>
    <script src="javascripts/lib/jquery.flot.js"></script>
    <script src="bootstrap/js/bootstrap.js"></script>

    <script>
        // Add FMU
        $("#fmu-dropdown li a").click(function(){
            var id = $(this).attr("data-identifyer");
            var file = $(this).attr("data-file");
            var instanceName = id + "0"; // Todo fix

            // Add to the diagram
            var $fmu = $("<tr><td><a class=\"fmu\" data-identifyer=\""+id+"\" data-instance=\""+instanceName+"\" data-file=\""+file+"\" href=\"#\">"+instanceName+"</a><dl class=\"initial-values\"></dl></td></tr>");
            $("#fmu-table").append($fmu);

            // Select the FMU
            $fmu.click(function(){
                var instance = $(this).find("a").attr("data-instance");
                $("#selection-menu").attr("data-editing",instance);

                var file = $(this).find("a").attr("data-file");
                $("#selection-menu .head").html(instance);
                $("#variables-loading-message").show();
                $("#parameters").hide();
                $("#init-vals").hide();
                $.ajax({
                    url : "fmus/"+file+"/modelDescription.xml",
                    success : function(data){
                        //console.log(data);
                        var $xml = $(data);

                        // Hide loading message
                        $("#variables-loading-message").hide();

                        // Remove all old params
                        $("#parameters tr:not(:first), #init-vals tr:not(:first)").remove();

                        var fmiVersion = $xml.find("fmiModelDescription").attr("fmiVersion");
                        if(fmiVersion == "1.0"){

                            $xml.find("ScalarVariable").each(function(i,el){

                                var $el = $(el),
                                    inputHTML,
                                    $sub;
                                var variability = $el.attr("variability");

                                // Get var type
                                if($el.find("Real").length){
                                    $sub = $el.find("Real");
                                    start = (parseFloat($sub.attr("start"))+"") || "0.0";
                                    inputHTML = "<input type=\"text\" value=\""+start+"\"/>";

                                } else if($el.find("Integer").length){
                                    $sub = $el.find("Integer");
                                    start = paseInt($sub.attr("start")) || "0";
                                    inputHTML = "<input type=\"number\" value=\""+start+"\">";

                                } else if($el.find("Boolean").length){
                                    $sub = $el.find("Boolean");
                                    inputHTML = "<input type=\"checkbox\" value=\"1\""+($sub.attr("start")=="true" ? " checked" : "")+">";

                                } else if($el.find("String").length){
                                    $sub = $el.find("String");
                                    start = $sub.attr("start") || "";
                                    inputHTML = "<input type=\"text\" value=\""+start+"\">";
                                }

                                var $param = $("<tr data-valueReference=\""+$el.attr("valueReference")+"\"><td>"+$el.attr("name")+"</td><td>"+inputHTML+"</td><td>"+($el.attr("description") || "")+"</td></tr>");

                                $param.find("input").change(function(e){
                                    // Get new value
                                    $target = $(this);
                                    var val = $target.val();
                                    var vr = $target.parents("tr").attr("data-valueReference");
                                    var identifyer = $("#selection-menu").attr("data-editing");

                                    // Set it
                                    $('#diagram .fmu[data-instance="'+identifyer+'"]').parent().find('.initial-values').append("<dt>"+vr+"</dt><dd>"+val+"</dd>");
                                });

                                // Insert in correct table
                                switch(variability){
                                    case "parameter":
                                        $("#parameters").append($param);
                                        break;
                                    case "continuous":
                                    default: 
                                        $("#init-vals").append($param);
                                        break;
                                }
                            });

                        } else {
                            alert("Only FMI version 1.0 is supported so far, but \""+fmiVersion+"\" was given");
                        }

                        // Only show if there is something to show
                        if($("#init-vals  tr").length > 1) $("#init-vals") .show();
                        if($("#parameters tr").length > 1) $("#parameters").show();
                    },
                    error: function(data){
                        console.log(data);
                    }
                });
            });
        });

    // User clicks "simulate"
    $("#simulate-button").click(function(e){
        // Serialize the whole diagram
        var json = {
            /* Connections: on format
            {
                fromFMU : "wheelloader0",
                toFMU : "agxVehicle0",
                fromVR : 0,
                toVR : 0
            }
            */
            connections : [],

            /*
            FMUs on format:
            {
                wheelloader0 : {
                    fmu : "wheelloader.fmu",
                    initialValues : { "0" : 0.07, }
                },
            }
            */
            fmus : {},
            timestep : $("#timestep").val(),
            endTime : $("#endTime").val()
        };

        // Add fmus to the JSON
        var numFMUs = 0;
        $(".fmu").each(function(i,el){
            numFMUs++;
            $el = $(el);
            var file = $el.attr("data-file");
            var id = $el.attr("data-identifyer");
            json.fmus[id] = {
                fmu : file,
                initialValues:{}
            }
            var vrList = $el.parent().find(".initial-values dt");
            var valueList = $el.parent().find(".initial-values dd");
            for(var j=0; j<valueList.length; j++){
                var vr = parseInt($(vrList[j]).html());
                var val = $(valueList[j]).html();
                json.fmus[id].initialValues[vr+""] = val;
            }
        });

        $.ajax({
            url : "simulate",
            type:"POST",
            data : json,
            success : function(data){
                parseCSVdata(data);
                plotSelectedData();
                /*$("#simulateModal").addClass("hide");*/
                $("#simulateModal").modal('hide');
                $("#nav-analysis").trigger("click");
            },
            error : function(data){
                console.error("Something went wrong!");
                console.error(data);
            }
        });
    });

    $("#nav-simulate").click(function(){
        if(!$(".fmu").length){
            $("#no-fmus-in-simulation-message").show();
            $("#simulate-button,#simulation-parameters").hide();
        } else {
            $("#no-fmus-in-simulation-message").hide();
            $("#simulate-button,#simulation-parameters").show();
        }
    });

    $("#nav-analysis").click(function(){
        $("#nav-analysis").parent().addClass("active");
        $("#nav-simulation").parent().removeClass("active");
        $("#simulation-view").hide();
        $("#analysis-view").show();
    });

    $("#nav-simulation").click(function(){
        $("#nav-simulation").parent().addClass("active");
        $("#nav-analysis").parent().removeClass("active");
        $("#analysis-view").hide();
        $("#simulation-view").show();
    });

    // Toggle all plot columns
    $("#plot-columns-showall").change(function(){
        if($("#plot-columns-showall").is(":checked")){
            $("#plot-columns tr:not(:first) input").prop("checked",true);
        } else {
            $("#plot-columns tr:not(:first) input").prop("checked",false);
        }
        plotSelectedData();
    });

    var plotData = [];
    var headers = [];
    function parseCSVdata(csvData){
        plotData = [];

        // Empty the column selection menu
        $("#plot-columns tr:not(:first)").remove();

        // Construct data
        if(csvData){
            var lines = csvData.split("\n");
            var header = lines.shift();
            headers = header.split(",");

            // Add all headers to the table
            for(var i=1; i<headers.length; i++){
                plotData.push([]);
                var id = "plot-vr-checkbox-"+i;
                $("#plot-columns").append("<tr><td><label for=\""+id+"\">"+headers[i]+"</label></td><td><input type=\"checkbox\" id=\""+id+"\" checked=\"checked\"></td></tr>");
            }
            $("#plot-columns tr:not(:first) input").change(plotSelectedData);

            for(var i=0; i<lines.length; i++){
                var strings = lines[i].split(",");
                var time = parseFloat(strings[0]);
                for(var j=1; j<strings.length; j++){
                    plotData[j-1].push([time,parseFloat(strings[j])]);
                }
            }

        } else {

        }
    }

    function plotSelectedData(){
        var selectedData = [];
        $("#plot-columns tr:not(:first) input").each(function(i,el){
            if($(el).is(":checked")){
                selectedData.push(plotData[i]);
            }
        });
        $.plot("#plot", selectedData);
    }


    </script>
</body>
</html>
