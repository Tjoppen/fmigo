FROM debian:bookworm
RUN apt update

#
# Some notes on the packages installed here where it may not be obvious why
# they are installed:
#
#      libxml2-dev: for lxml
#     libxstl1-dev: for lxml
#
RUN apt install --yes \
  bc \
  build-essential \
  ccache \
  clang \
  cmake \
  git \
  libczmq-dev \
  libexpat1-dev \
  libgsl-dev \
  libhdf5-dev \
  libmatio-dev \
  libopenmpi-dev \
  libprotobuf-dev \
  libsuitesparse-dev \
  libxml2-dev \
  libxslt1-dev \
  ninja-build \
  openmpi-bin \
  protobuf-c-compiler \
  protobuf-compiler \
  python3 \
  python3-lxml \
  python3-matplotlib \
  python3-numpy \
  python3-protobuf \
  python3-psutil \
  python3-scipy \
  python3-zmq \
  ssh \
  valgrind

#
# Create user, since mpiexec doesn't like to run as root
#
RUN useradd -ms /bin/bash gitlab-ci

# Copy code into image
RUN  mkdir              /home/gitlab-ci/umit
COPY .                  /home/gitlab-ci/umit
RUN  chown -R gitlab-ci /home/gitlab-ci/umit

# Finally, make us run as gitlab-ci
USER gitlab-ci
WORKDIR /home/gitlab-ci/umit
RUN git submodule init
RUN git submodule update
RUN export PATH=/usr/lib/ccache:$PATH

# docker doesn't copy empty directories for some reason
RUN mkdir 3rdparty/FMILibrary-3.0a4/ThirdParty/Expat/expat-2.5.0/src
RUN mkdir build
RUN mkdir build-clang
WORKDIR /home/gitlab-ci/umit/build
# First build without libmatio, then run another build with it enabled
RUN cmake .. -G Ninja -DUSE_MATIO=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON
RUN ninja install
RUN cmake .. -G Ninja -DUSE_MATIO=ON  -DCMAKE_POSITION_INDEPENDENT_CODE=ON
RUN ninja install
WORKDIR /home/gitlab-ci/umit/build-clang
RUN cmake .. -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DUSE_MATIO=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON
RUN ninja install
RUN cmake .. -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DUSE_MATIO=ON  -DCMAKE_POSITION_INDEPENDENT_CODE=ON
RUN ninja install
