To build on Windows you may use build.bat. There are some prerequisites though:

Microsoft Visual Studio 2013 or 2015
CMake 3.2 or later: https://cmake.org/download/
MS-MPI: https://msdn.microsoft.com/en-us/library/windows/desktop/bb524831(v=vs.85).aspx Download and install both msmpisdk.msi and MSMpiSetup.exe

If you have everything set up correctly then the following commands should work in cmd.exe: cmake, msbuild, mpiexec.
If not then you need to set point %PATH% to where these programs are located.

Run the appropriate .bat file to build the system:

Visual Studio 2013: build_msvc12.bat
Visual Studio 2015: build_msvc14.bat

For being able to run the tests:
Python
bash: Should be shipped with your git installation. Any bash which has support for forking should be good.
win-bash: https://sourceforge.net/projects/win-bash/ For dd, sed etc. DO NOT USE win-bash's bash.exe - it does not support forking.
An alternative to using the tools in win-bash may be to point %PATH% to C:\Program Files\Git\usr\bin. This has not been tested though.

If everything is set up correctly the following commands should work inside of bash.exe: dd, seq, bc

Run run_test.sh to run the tests.
If mpiexec complains about [...]/install/bin/fmi-tcp-master missing then you need to run "make install" in build/
If fmu-builder is missing you have probably cloned the repository without --recurse-submodules. Run "git submodule init && git submodule update" in the root project and umit-fmus/



# Windows runtime instructions
Install the following
* [MS-MPI](https://msdn.microsoft.com/en-us/library/windows/desktop/bb524831(v=vs.85).aspx) Download and install both msmpisdk.msi and MSMpiSetup.exe
* [Visual C++ Redistributable Packages for Visual Studio 2013](https://www.microsoft.com/en-us/download/details.aspx?id=40784)
* [Visual C++ Redistributable for Visual Studio 2012 Update 4](https://www.microsoft.com/en-us/download/details.aspx?id=30679#)
