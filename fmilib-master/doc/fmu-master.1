.TH FMU-MASTER 1 local
.SH NAME
fmu-master \- simulate FMUs
.SH SYNOPSIS
.ll +8
.B fmu-master
.RB [ " \-hlqrvcwdfmopst " ]
[
.I "files \&..."
]
.ll -8
.br
.SH DESCRIPTION
.I fmu-master
simulates FMUs using the FMILibrary from JModelica.org
.SH FLAGS
.TP
.B \-h
Show help and quit.
.TP
.B \-l
Show FMILibrary logs.
.TP
.B \-q
Quiet mode, do not print simulation info to STDOUT. This flag should be used together with -r.
.TP
.B \-r
Real time mode. Will usleep() in between communication steps if the execution was faster than real time.
.TP
.B \-v
Show version and quit.
.TP
.B \-x
Print XML and quit.
.SH OPTIONS
.TP
.B \-c [CONNECTIONS]
Connection specification. No connections by default. Quadruples of positive integers, representing which FMU and value reference to connect from and what to connect to. Syntax is

    CONN1:CONN2:CONN3...

where CONNX is an optional type character folowed by comma, followed by four comma-separated integers; [TYPE,]FMUFROM,VRFROM,FMUTO,VRTO.
If TYPE is absent then the connection is assumed to be of type real.
An example connection string is

    0,0,1,0:0,1,1,1

which means: connect real values FMU0 (value reference 0) to FMU1 (vr 0) and FMU0 (vr 1)
to FMU1 (vr 1).
Another example:

    i,0,1,1,2

which means: connect integer value FMU0 VR1 to FMU1 VR2.
Possible types:

    r - Real
    i - Integer
    b - Boolean
    s - String

Default is no connections.
.TP
.B \-w [VISIBILITIES]
Visibility specification. Syntax is

    VIS0:VIS1:VIS2...

where VISX is 1 or 0 depending on whether FMUX's simulator application window should be visible or not.
Example:

    0:1:1:0

which means: show simulator windows for FMU1 and FMU2, but not FMU0 or FMU3.
By default no windows are shown (batch mode).
.TP
.B \-d [TIMESTEP]
Timestep size. Default is 0.1.
.TP
.B \-f [OUTFORMAT]
Output file format. Currently only "csv" is supported, and it is also the default.
.TP
.B \-g [STEPPING ORDER SPEC]
FMU stepping order. Used in serial algorithms. Should be a comma separated list of FMU indices. If the list starts with 0, then the first FMU will be stepped, and its utput values will be transferred through their connections (if any).
.TP
.B \-m [METHOD]
Stepping method. Available methods are "jacobi" (Jacobi, parallel) and "gs" (Gauss-Seidel, serial). Default is "jacobi".
.TP
.B \-o [OUTFILE]
Result output file. If set to "stdout", then output will be to STDOUT. Default value is "result.csv".
.TP
.B \-p [PARAMS]
Parameter specification.
Entries are separated by :, each entry consists of an optional type (assumed real if not present) followed by a comma separated triplet of FMU index, value reference and value.
Example:

    b,0,0,true:r,0,0,0:s,0,0,hello

which means set FMU0 boolean VR0 to true, FMU0 real VR0 to zero and FMU0 string VR0 to "hello".
Note that despite identical value references these entries refer to different parameters since VRs apply with respect to a base type.
See -c option for a list of possible types (i, r, s, b).
Default is no parameters.
.TP
.B \-s [SEPARATOR]
CSV separator character. Default is comma (,).
.TP
.B \-t [ENDTIME]
End simulation time in seconds. Default is 1.0.
.SH EXAMPLES
To run an FMU simulation from time 0 to 5 with timestep 0.01:
    fmu-master -t 5 -d 0.01 ../myFMU.fmu

To simulate two FMUs connected from the first output of the first FMU to the first input of the second:
    fmu-master -c 0,0,1,0 a.fmu b.fmu

To simulate quietly (without output to STDOUT) and save the results to file:
    fmu-master -q -o out.csv a.fmu

.SH "ABOUT"
The app was built by Stefan Hedman at UMIT Research Lab 2013.