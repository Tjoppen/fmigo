FROM ubuntu:xenial
RUN apt-get update

#
# Some notes on the packages installed here where it may not be obvious why
# they are installed:
#
#  build-essential: for gcc
#              git: for being able to fetch submodules, since gitlab doesn't
#                   do this for us yet
#           psmisc: for killall
#       python-dev: for pip to build psutil
#      libxml2-dev: for lxml
#     libxstl1-dev: for lxml
#
RUN apt-get install --yes \
        build-essential cmake ninja-build git python bc psmisc \
        protobuf-compiler protobuf-c-compiler libprotobuf-dev \
        libsuitesparse-dev libzmqpp-dev libhdf5-dev \
        libopenmpi-dev libgsl-dev valgrind \
        python-pip python-dev libxml2-dev libxslt1-dev ccache
RUN apt-get install -y python-numpy python-scipy python-matplotlib
RUN apt-get install -y python3-pip libmatio-dev

#
# Create user, since mpiexec doesn't like to run as root
#
RUN useradd -ms /bin/bash gitlab-ci

# Copy code into image
RUN  mkdir              /home/gitlab-ci/umit
COPY .                  /home/gitlab-ci/umit
RUN  chown -R gitlab-ci /home/gitlab-ci/umit

# Install python requirements
WORKDIR /home/gitlab-ci/umit
RUN pip2 install -r Buildstuff/requirements.txt
RUN pip3 install -r Buildstuff/requirements.txt

# Finally, make us run as gitlab-ci
USER gitlab-ci
WORKDIR /home/gitlab-ci/umit
RUN export PATH=/usr/lib/ccache:$PATH
# Error out on warnings on all platforms except buster
RUN export WERROR=-Werror

# docker doesn't copy empty directories for some reason
RUN mkdir 3rdparty/FMILibrary-2.0.1/ThirdParty/Expat/expat-2.1.0/src
RUN mkdir build
WORKDIR /home/gitlab-ci/umit/build
# First build without libmatio, then run another build with it enabled
RUN cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS="-fsanitize=address -fsanitize=undefined" -DCMAKE_CXX_FLAGS="-fsanitize=address -fsanitize=undefined" -DUSE_MATIO=OFF
RUN ninja install
RUN cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS="-fsanitize=address -fsanitize=undefined" -DCMAKE_CXX_FLAGS="-fsanitize=address -fsanitize=undefined" -DUSE_MATIO=ON
RUN ninja install
# -fsanitize causes linking issue with clang at the moment, so skip it for now
